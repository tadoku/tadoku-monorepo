// Code generated by MockGen. DO NOT EDIT.
// Source: contest_log_interactor.go

// Package usecases is a generated GoMock package.
package usecases

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/tadoku/api/domain"
	reflect "reflect"
)

// MockContestLogInteractor is a mock of ContestLogInteractor interface
type MockContestLogInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockContestLogInteractorMockRecorder
}

// MockContestLogInteractorMockRecorder is the mock recorder for MockContestLogInteractor
type MockContestLogInteractorMockRecorder struct {
	mock *MockContestLogInteractor
}

// NewMockContestLogInteractor creates a new mock instance
func NewMockContestLogInteractor(ctrl *gomock.Controller) *MockContestLogInteractor {
	mock := &MockContestLogInteractor{ctrl: ctrl}
	mock.recorder = &MockContestLogInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockContestLogInteractor) EXPECT() *MockContestLogInteractorMockRecorder {
	return m.recorder
}

// CreateLog mocks base method
func (m *MockContestLogInteractor) CreateLog(log domain.ContestLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLog", log)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLog indicates an expected call of CreateLog
func (mr *MockContestLogInteractorMockRecorder) CreateLog(log interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLog", reflect.TypeOf((*MockContestLogInteractor)(nil).CreateLog), log)
}
